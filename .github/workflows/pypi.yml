name: PyPI

on:
  release:
    types:
      - published
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-artifacts:
    runs-on: ubuntu-latest
    if: github.repository == 'Cloud-Drift/clouddrift'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: 3.9
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine docutils
      - name: Create tarball and wheels
        run: |
          git clean -xdf
          git restore -SW .
          python -m build
      - name: Check built artifacts version
        run: |
          python -m twine check dist/*
          pwd
          if [ -f dist/clouddrift-0.0.0.tar.gz ]; then
            echo "Invalid version number"
            exit 1
          else
            echo "Looks good"
          fi
      - uses: actions/upload-artifact@v3
        with:
          name: releases
          path: dist

  test-built-dist:
    needs: build-artifacts
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: 3.9
      - uses: actions/download-artifact@v3
        with:
          name: releases
          path: dist
      - name: List contents of built dist
        run: |
          ls -ltrh
          ls -ltrh dist
      - name: Verify the built dist/wheel is valid
        run: |
          python -m pip install --upgrade pip
          python -m pip install dist/clouddrift*.whl

      - name: Publish package to TestPyPI
        if: github.event_name == 'push'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository_url: https://test.pypi.org/legacy/
          verbose: true

  upload-to-pypi:
    needs: test-built-dist
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: releases
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          verbose: true
