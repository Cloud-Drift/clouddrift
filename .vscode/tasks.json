{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "[SETUP] Install ALL Dependencies",
            "type": "shell",
            "dependsOn": [
                "Install Library Dependencies",
                "Install Development Dependencies",
                "Install Testing Dependencies"
            ]
        },
        {
            "label": "[SETUP] Install Library Dependencies",
            "type": "shell",
            // First we do a dry run to ensure the prefix doesn't already exist. If it doesn't we create the environment. 
            "command": "conda env create -n clouddrift -f environment.yml -d 2>&1 | grep 'prefix already exists' || conda env create -n clouddrift -f environment.yml",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []
        },
        {
            "label": "[SETUP] Install Development Dependencies",
            "type": "shell",
            "command": "conda install -n clouddrift ruff mypy && conda run mypy --install-types",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []
        },
        {
            "label": "[SETUP] Install Testing Dependencies",
            "type": "shell",
            "command": "conda install -n clouddrift pytest matplotlib-base cartopy",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []

        },
        {
            "label": "[SETUP] Install Build Dependencies",
            "type": "shell",
            "command": "conda install -n clouddrift build twine docutils",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []

        },
        {
            "label": "[SETUP] Install Doc Generation Dependencies",
            "type": "shell",
            "command": "cd docs && conda run -n clouddrift pip install -r requirements.txt",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []

        },
        {
            "label": "[TASK] Pre-commit Processes",
            "type": "shell",
            "dependsOn": ["[TASK] Ruff Processes", "[TASK] Mypy Processes", "[TASK] Run test suite"],
        },
        {
            "label": "[TASK] Ruff Processes",
            "type": "shell",
            "command": "conda run -n clouddrift ruff format clouddrift/ tests/ && conda run -n clouddrift ruff check clouddrift/ tests/",
            "dependsOn": [],
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []

        },
        {
            "label": "[TASK] Mypy Processes",
            "type": "shell",
            "command": "conda run -n clouddrift mypy --config-file pyproject.toml",
            "dependsOn": [],
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []

        },
        {
            "label": "[TASK] Run NEW/UPDATED tests",
            "type": "shell",
            "command": "conda run -n clouddrift pytest tests/*_tests.py tests/adapters/*_tests.py",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []
        },
        {
            "label": "[TASK] Run ALL tests",
            "type": "shell",
            "command": "conda run -n clouddrift pytest tests/*_tests.py tests/adapters/*_tests.py",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []
        },
        {
            "label": "[TASK] Build distribution package",
            "type": "shell",
            "command": "rm -rf dist/ && conda run -n clouddrift python -m build",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []

        },
        {
            "label": "[TASK] Install distribution package",
            "type": "shell",
            "dependsOn": ["[TASK] Build distribution package"],
            // No cache dir to prevent caching previous builds using the same version number.
            "command": "conda run -n clouddrift pip uninstall clouddrift -y && conda run -n clouddrift pip install --no-cache-dir dist/clouddrift-*.whl",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []

        },
        {
            "label": "[TASK] Generate documentation site",
            "type": "shell",
            "dependsOn": ["[TASK] Install distribution package"],
            "command": "cd docs && make clean && make html",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []
        },
        {
            "label": "[TASK] Serve documentation site",
            "type": "shell",
            "dependsOn": ["[TASK] Generate documentation site"],
            "command": "python -m http.server -b localhost -d docs/_build/html 8080",
            "group": {
                "kind": "none",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "panel": "new",
            },
            "problemMatcher": []

        }
    ]
}